--------------------------------------------------Java-------------------------------------------------------------------
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
        int len1 = 0, len2 = 0;
        for(ListNode currNode = headA; currNode != null; currNode = currNode.next){
            len1++;
        }
        for(ListNode currNode = headB; currNode != null; currNode = currNode.next){
            len2++;
        }
        if(len1 > len2){
            int lenDiff = len1-len2;
            while(lenDiff-->0){
                headA = headA.next;
            }
        }else if(len2 > len1){
            int lenDiff = len2-len1;
            while(lenDiff-->0){
                headB = headB.next;
            }
        }
        while(headB != null){
            if(headB == headA)return headB;
            headB = headB.next;
            headA = headA.next;
        }
        return null;

    }
}
