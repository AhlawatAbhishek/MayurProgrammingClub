Problem Link: https://www.interviewbit.com/problems/maximum-sum-combinations/

----------------------------------------------------------------Java-------------------------------------------------------------------------------------------
public class Solution {
    public ArrayList<Integer> solve(ArrayList<Integer> A, ArrayList<Integer> B, int C) {
       Collections.sort(A, Collections.reverseOrder());
       Collections.sort(B, Collections.reverseOrder());
       PriorityQueue<Integer> minHeap = new PriorityQueue<>();
       int len = A.size();
       for(int indx1 = 0; indx1 < len; indx1++){
           for(int indx2 = 0; indx2 < len; indx2++){
               int currSum = A.get(indx1) + B.get(indx2);
               if(minHeap.size() < C){
                   minHeap.offer(currSum);
                   continue;
               }
               if(currSum <= minHeap.peek()){
                   break;
               }else{
                   minHeap.offer(currSum);
                   minHeap.poll();
               }
               
           }
       }
       ArrayList<Integer> res = new ArrayList<>();
       while(!minHeap.isEmpty()){
           res.add(minHeap.poll());
       }
       Collections.sort(res, Collections.reverseOrder());
       return res;
    }
}

