-------------------------------------------------------------------------------Java------------------------------------------------------------------------------------------------
class Solution {
    public List<List<Integer>> subsetsWithDup(int[] nums) {
       List<List<Integer>> res = new ArrayList<>(); 
       Arrays.sort(nums);
       makeSubsets(nums, 0, new ArrayList<>(), res);
       return res;
    }
    private void makeSubsets(int nums[], int indx, List<Integer> currList, List<List<Integer>> res){
        int len = nums.length;
        if(indx == len){
           res.add(new ArrayList<>(currList));
           return;
        }
        //consider including it
        //indx == 0 || (indx > 0 &&  nums[indx-1] != nums[indx])
        if(true){
           currList.add(nums[indx]);
           makeSubsets(nums, indx + 1, currList, res);
           currList.remove(currList.size()-1);
        }
        if(currList.size() == 0 || (currList.size() > 0 &&  currList.get(currList.size()-1) != nums[indx]))
        makeSubsets(nums, indx + 1, currList, res);
    }
    
}
