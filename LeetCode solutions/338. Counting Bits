-----------------------------------------------------------------CODE WITHOUT COMMENTS------------------------------------------------------------------------------
-------------------------------------C++-----------------------------------------------------
class Solution {
public:
    vector<int> countBits(int n) {
        vector<int> res;
        for(int num = 0; num <= n; num++){
            res.push_back(bitCnt(num));
        }
        return res;
    }
private:
    int bitCnt(int num){
         int cnt = 0;
        while(num > 0){
            cnt++;
            num &= (num-1);
        }
        return cnt;
    }    
};
-------------------------------------Java----------------------------------------------------
class Solution {
    public int[] countBits(int n) {
        int res[] = new int[n+1];
        for(int num = 0; num <= n; num++){
            res[num] = (bitCnt(num));
        }
        return res;
    }
    private int bitCnt(int num){
         int cnt = 0;
        while(num > 0){
            cnt++;
            num &= (num-1);
        }
        return cnt;
    }    
}

-----------------------------------------------------------------CODE WITH COMMENTS---------------------------------------------------------------------------------
class Solution {
public:
    vector<int> countBits(int n) {
        vector<int> res;
        //for each number in range 0 to n we are counting set bit with helpl of brain kernighan's algorithm
        for(int num = 0; num <= n; num++){
            res.push_back(bitCnt(num));
        }
        return res;
    }
// brain kernighan's algorithm    
private:
    int bitCnt(int num){
         int cnt = 0;
        while(num > 0){
            cnt++;
            num &= (num-1);
        }
        return cnt;
    }    
};
