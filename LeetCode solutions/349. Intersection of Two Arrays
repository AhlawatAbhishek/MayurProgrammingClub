-------------------------Java--------------------------------------------------
class Solution {
    public int[] intersection(int[] nums1, int[] nums2) {
        Set<Integer> unqEle = new HashSet<>(), removedEle = new HashSet<>();
        for(var num : nums1){
            unqEle.add(num);
        }
        List<Integer> intersection = new ArrayList<>();
        for(var num : nums2){
            if(unqEle.contains(num) && !removedEle.contains(num)){
                intersection.add(num);
                removedEle.add(num);
            }
        }
        return intersection.stream().mapToInt(x->x).toArray();  
    }
}
-------------------------------C++----------------------------------------------
class Solution {
public:
    vector<int> intersection(vector<int>& nums1, vector<int>& nums2) {
        unordered_set<int> unqEle(nums1.begin(), nums1.end()), removedEle;
        vector<int> intersection;
        for (int num : nums2) {
            if (unqEle.find(num) != unqEle.end() && removedEle.find(num) == removedEle.end()) {
                intersection.push_back(num);
                removedEle.insert(num);
            }
        }
        return intersection;
    }
};
