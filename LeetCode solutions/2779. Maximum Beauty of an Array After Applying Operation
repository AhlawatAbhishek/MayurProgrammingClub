---------------------------------------------------------------javascript--------------------------------------------------------------------------------------------------------
/**
 * @param {number[]} nums
 * @param {number} k
 * @return {number}
 */
var maximumBeauty = function(nums, k) {
    let size = nums.length;
        let right = 0, left = 0;
        let maxBeauty = 1;
        nums.sort((a,b)=>(a-b));
        // console.log(nums);
        while(right < size){
            while(left < right && (nums[right]-nums[left]) > (2 * k)){
                left++;
            }
            if((nums[right] - nums[left] <= (2 * k))){
                maxBeauty = Math.max(maxBeauty, right - left + 1);
            }
            right++;
        }
        return maxBeauty;
};
-----------------------------------------------------------------------Java----------------------------------------------------------------------------------------------------------
class Solution {
    public int maximumBeauty(int[] nums, int k) {
        int size = nums.length;
        int right = 0, left = 0;
        int maxBeauty = 1;
        Arrays.sort(nums);
        while(right < size){
            while(left < right && (nums[right]-nums[left]) > (2 * k)){
                left++;
            }
            if((nums[right] - nums[left] <= (2 * k))){
                maxBeauty = Math.max(maxBeauty, right - left + 1);
            }
            right++;
        }
        return maxBeauty;
    }
}
