------------------------------------------------------------------------------CODE WITHOUT COMMENTS----------------------------------------------------------------------------------
-------------------------------------C++--------------------------------------------------
class Solution {
public:
    int bestClosingTime(string customers) {
        int sz = customers.size();
        int nTotal = count(customers.begin(), customers.end(), 'N');
        int yTotal = count(customers.begin(), customers.end(), 'Y');
        if(nTotal == 0)return sz;
        int nCnt = 0, yCnt = 0, minPen = INT_MAX, minClose = INT_MAX;
        for(int indx = 0; indx < sz; indx++){
            int pen = nCnt + (yTotal - yCnt);
            if(pen < minPen){
                minPen = pen;
                minClose = indx;
            }
            if(customers[indx] == 'Y')yCnt++;
            else nCnt++;
        }
        int pen = nCnt;
        if(pen  < minPen){
            minPen = pen;
            minClose = sz;
        }
        return minClose;        
    }
};
--------------------------------------Java------------------------------------------------
class Solution {
    public int bestClosingTime(String customers) {
        int sz = customers.length();
        int nTotal = 0, yTotal = 0;
        for(var c : customers.toCharArray()){
            if(c == 'Y')yTotal++;
            else nTotal++;
        }
        if(nTotal == 0)return sz;
        int nCnt = 0, yCnt = 0, minPen = Integer.MAX_VALUE, minClose = Integer.MAX_VALUE;
        for(int indx = 0; indx < sz; indx++){
            int pen = nCnt + (yTotal - yCnt);
            if(pen < minPen){
                minPen = pen;
                minClose = indx;
            }
            if(customers.charAt(indx) == 'Y')yCnt++;
            else nCnt++;
        }
        int pen = nCnt;
        if(pen  < minPen){
            minPen = pen;
            minClose = sz;
        }
        return minClose;
    }
}
------------------------------------------------------------------------------CODE WITH COMMNENTS-----------------------------------------------------------------------------------
class Solution {
public:
    int bestClosingTime(string customers) {
        int sz = customers.size();
        //checking the number of occurences of "N" and "Y" in customer string
        int nTotal = count(customers.begin(), customers.end(), 'N');
        int yTotal = count(customers.begin(), customers.end(), 'Y');
        //when at every hour a customer is visiting the shop
        if(nTotal == 0)return sz;

        int nCnt = 0, yCnt = 0, minPen = INT_MAX, minClose = INT_MAX;
        //so we will caculate the penalty at each hour
        for(int indx = 0; indx < sz; indx++){
            int pen = nCnt + (yTotal - yCnt);
            if(pen < minPen){
                minPen = pen;
                minClose = indx;
            }
            if(customers[indx] == 'Y')yCnt++;
            else nCnt++;
        }
        //this is to check whether the minimum penalty occurs after the visiting hours are over
        int pen = nCnt;
        if(pen  < minPen){
            minPen = pen;
            minClose = sz;
        }
        //reuturn minimum shop closing time
        return minClose;        
    }
};
