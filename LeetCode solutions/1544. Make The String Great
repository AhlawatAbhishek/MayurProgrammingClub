----------------------------------------Java---------------------------------------------------------------------------------
class Solution {
    public String makeGood(String s) {
        ArrayDeque<Character> charStack = new ArrayDeque<>();
        for (char currChar : s.toCharArray()) {
            if (charStack.isEmpty()) {
                charStack.push(currChar);
            } else {
                if ((Character.isUpperCase(charStack.peek()) != Character.isUpperCase(currChar))
                    && (Math.abs(charStack.peek() - currChar) == 32)) {
                    charStack.pop();
                } else {
                    charStack.push(currChar);
                }
            }
        }
        StringBuilder ans = new StringBuilder();
        while (!charStack.isEmpty()) {
            ans.append(charStack.pop());
        }
        return ans.reverse().toString();
    }
}
-----------------------------------------------------C++-----------------------------------------------------------------------------
class Solution {
public:
    string makeGood(string s) {
        stack<char> charStk; 
        for(auto currChar : s){
            if(charStk.empty()){
                charStk.push(currChar);
            }else{
                if(isupper(charStk.top()) != isupper(currChar) && abs(charStk.top() - currChar) == 32){
                    charStk.pop();
                }else{
                    charStk.push(currChar);
                }
            }
        }
        string ans = "";
        while(!charStk.empty()){
            ans += charStk.top();
            charStk.pop();
        }
        reverse(ans.begin(), ans.end());
        return ans;
    }
};
