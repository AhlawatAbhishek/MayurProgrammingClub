=======================================C++======================================
```
class Solution {
public:
    ListNode* mergeNodes(ListNode* head) {
        ListNode* prevZero = head;
        ListNode* currNode = head;
        while (currNode != nullptr) {
            if (currNode->val != 0) {
                int sum = currNode->val;
                currNode = currNode->next;
                while (currNode->val != 0) {
                    sum += currNode->val;
                    currNode = currNode->next;
                }
                prevZero->next->val = sum;
                prevZero->next->next = currNode;
                prevZero = currNode;
            }
            currNode = currNode->next;
        }

        ListNode dummyHead;
        dummyHead.next = head;
        currNode = &dummyHead;
        while (currNode != nullptr && currNode->next != nullptr) {
            if (currNode->next->val == 0) {
                currNode->next = currNode->next->next;
            } else {
                currNode = currNode->next;
            }
        }
        return dummyHead.next;
    }
};
```
========================================Java====================================
```
class Solution {
    public ListNode mergeNodes(ListNode head) {
        ListNode prevZero = head;
        ListNode currNode = head;
        while(currNode != null){
            if(currNode.val != 0){
                int sum = currNode.val;
                currNode = currNode.next;
                while(currNode.val != 0){
                    sum += currNode.val;
                    currNode = currNode.next;
                }
                prevZero.next.val = sum;
                prevZero.next.next = currNode;
                prevZero = currNode;
            }
            currNode = currNode.next;
        }
        ListNode dummyHead = new ListNode();
        dummyHead.next = head;
        currNode = dummyHead;
        while(currNode != null){
            if(currNode.next.val == 0){
                currNode.next = currNode.next.next;
            }
            currNode = currNode.next;
        }
        return dummyHead.next;
    }
}
```
