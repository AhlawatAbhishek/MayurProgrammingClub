---------------------------------------------Java-------------------------------------------------------------------
class Solution {
    public int[] rearrangeArray(int[] nums) {
        List<Integer> neg = new ArrayList<>(), pos = new ArrayList<>();
        for(var num : nums){
           if(num < 0) 
            neg.add(num);
           else pos.add(num);
        }
        List<Integer> result = new ArrayList<>();
        int nIndx = 0, pIndx = 0;
        while(nIndx < neg.size() && pIndx < pos.size()){
             result.add(pos.get(pIndx++));
             result.add(neg.get(nIndx++));
        }
        return result.stream().mapToInt(x->x).toArray();
    }
}
------------------------------------------------C++--------------------------------------------------------------------
class Solution {
public:
    vector<int> rearrangeArray(vector<int>& nums) {
        vector<int> neg, pos;
        for(auto num : nums){
           if(num < 0) 
            neg.push_back(num);
           else pos.push_back(num);
        }
        //Two pointers approach
        vector<int> result;
        int nIndx = 0, pIndx = 0;
        while(nIndx < neg.size() && pIndx < pos.size()){
             result.push_back(pos[pIndx++]);
             result.push_back(neg[nIndx++]);
        }
        return result;
    }
};
