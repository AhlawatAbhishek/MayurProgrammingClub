--------------------------------Java--------------------------------------------
class Solution {
    public boolean isSameTree(TreeNode p, TreeNode q) {
         if(p ==  null && q == null)return true;
        if(p == null || q == null)return false;
        //p and q both are having non null values
        boolean leftSubTreeCheck = isSameTree(p.left, q.left), rightSubTreeCheck = isSameTree(p.right, q.right);
        return p.val == q.val && leftSubTreeCheck && rightSubTreeCheck;
    }
}
----------------------------C++-------------------------------------------------
class Solution {
public:
    bool isSameTree(TreeNode* p, TreeNode* q) {
        if(p ==  NULL && q == NULL)return true;
        if(p == NULL || q == NULL)return false;
        bool leftSubTreeCheck = isSameTree(p->left, q->left), rightSubTreeCheck = isSameTree(p->right, q->right);
        return p->val == q->val && leftSubTreeCheck && rightSubTreeCheck;
    }
};
