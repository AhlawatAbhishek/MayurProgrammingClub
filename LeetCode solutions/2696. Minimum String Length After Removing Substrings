--------------------------------------Java-------------------------------------------------------
class Solution {
    public int minLength(String s) {
        Deque<Character> charStck = new ArrayDeque<>();
        for(char chr : s.toCharArray()){
           if(charStck.isEmpty()) 
            charStck.offerLast(chr);
           else{
            char stckTopChr = charStck.peekLast();
              if((stckTopChr == 'A' &&  chr == 'B') || (stckTopChr == 'C' && chr == 'D')){
                charStck.pollLast();
              }else{
                charStck.offerLast(chr);
              }
           }  
        }
        return charStck.size();
    }
}
------------------------------------C++------------------------------------------------------------
class Solution {
public:
    int minLength(string s) {
        stack<char> charStck;
        for(char chr : s) {
            if(charStck.empty()) 
                charStck.push(chr);
            else {
                char stckTopChr = charStck.top();
                if((stckTopChr == 'A' && chr == 'B') || (stckTopChr == 'C' && chr == 'D')) {
                    charStck.pop();
                } else {
                    charStck.push(chr);
                }
            }
        }
        return charStck.size();
    }
};
