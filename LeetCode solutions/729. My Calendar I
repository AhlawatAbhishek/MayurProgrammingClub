----------------------------------------------Java---------------------------------------------------------------------------------
class MyCalendar {
    private TreeMap<Integer, Integer> startEndMp = null; 
    public MyCalendar() {
        startEndMp = new TreeMap<>();
    }
    
    public boolean book(int start, int end) {
        var closerFromRight = startEndMp.ceilingEntry(start);
        var closerFromLeft = startEndMp.floorEntry(start); 
        if(closerFromRight != null && end > closerFromRight.getKey()){
            return false;
        }
        if(closerFromLeft != null && start < closerFromLeft.getValue()){
            return false;
        }
        startEndMp.put(start, end);
        return true;
    }
}
----------------------------------------------C++----------------------------------------------------------------------------------
class MyCalendar {
private:
    map<int, int> startEndMp; 
public:
    MyCalendar() {
    }
    
    bool book(int start, int end) {
        auto closerFromRight = startEndMp.lower_bound(start); 
        auto closerFromLeft = (closerFromRight == startEndMp.begin()) ? startEndMp.end() : prev(closerFromRight);
        
        if (closerFromRight != startEndMp.end() && end > closerFromRight->first) {
            return false;
        }
        
        if (closerFromLeft != startEndMp.end() && start < closerFromLeft->second) {
            return false;
        }
        
        startEndMp[start] = end;
        return true;
    }
};
