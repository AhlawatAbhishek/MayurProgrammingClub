------------------------Java---------------------------------------------------
class Solution {
    public int firstUniqChar(String s) {
        int freq[] = new int[26];
        //populating the frequencies of different characters in the string
        for(var c : s.toCharArray())freq[c - 'a']++;
        //check for the first character from left side that is having
        //freq of 1
        for(int indx = 0; indx < s.length(); indx++){
            //if find that character at certain indx then we will be returning that indx
            if(freq[s.charAt(indx) - 'a'] == 1)return indx;
        }
        //if  we do not find a character that is not repeated in string then we will return -1
        return -1;
    }
}
----------------------------------C++-------------------------------------------
class Solution {
public:
    int firstUniqChar(string s) {
        vector<int>freq(26);
        //populating the frequencies of different characters in the string
        for(auto c : s)freq[c - 'a']++;
        //check for the first character from left side that is having
        //freq of 1
        for(int indx = 0; indx < s.size(); indx++){
            //if find that character at certain indx then we will be returning that indx
            if(freq[s[indx] - 'a'] == 1)return indx;
        }
        //if  we do not find a character that is not repeated in string then we will return -1
        return -1;
    }
};
