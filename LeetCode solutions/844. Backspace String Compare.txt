---------------------------------------------C++--------------------------------------------------------
//TC : O(n)
//SC : O(1)
class Solution {
public:
    bool backspaceCompare(string s, string t) {
        int szS = s.size(), szT = t.size();
        string sNew = findFinalString(s);
        string tNew = findFinalString(t);
        return sNew == tNew;
    }
 private:
    string findFinalString(string & str){
        int sz = str.size();
        //right to left to account character deletion because of 
        // '#' hash
        //right to left because it will help to form the final string in O(n), |str| = n

        int hashCnt = 0;
        string res = "";
        for(int indx = sz-1; indx > -1; indx--){
            if(str[indx] == '#'){
                hashCnt++;
            }else{
                if(hashCnt > 0){//skipping the current non hash character
                    hashCnt--;
                }else{//the current character is a non hash character and 
                // hashcount is also zero
                   res  += str[indx];
                }
            }
        }
        //return the reversed string because we formed the resultant string in reverse direction i.e. right to left
        reverse(res.begin(), res.end());
        return res;
    }   
};
----------------------------------------------Java-------------------------------------------------------
class Solution {
    public boolean backspaceCompare(String s, String t) {
        int szS = s.length(), szT = t.length();
        String sNew = findFinalString(s);
        String tNew = findFinalString(t);
        return sNew.equals(tNew);
    }
    
    private String findFinalString(String str) {
        int sz = str.length();
        int hashCnt = 0;
        StringBuilder res = new StringBuilder();
        for (int indx = sz - 1; indx > -1; indx--) {
            if (str.charAt(indx) == '#') {
                hashCnt++;
            } else {
                if (hashCnt > 0) {
                    hashCnt--;
                } else {
                    res.append(str.charAt(indx));
                }
            }
        }
        return res.reverse().toString();
    }
}
-----------------------------------------------Python 3----------------------------------------------------
class Solution:
    def backspaceCompare(self, s, t):
        szS = len(s)
        szT = len(t)
        sNew = self.findFinalString(s)
        tNew = self.findFinalString(t)
        return sNew == tNew

    def findFinalString(self, str):
        sz = len(str)
        hashCnt = 0
        res = []
        for indx in range(sz - 1, -1, -1):
            if str[indx] == '#':
                hashCnt += 1
            else:
                if hashCnt > 0:
                    hashCnt -= 1
                else:
                    res.append(str[indx])
        return ''.join(res[::-1])